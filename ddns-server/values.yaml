# Default values for ddns-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: bbaerthlein/docker-ddns-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.1.2"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

env:
  DDNS_ADMIN_LOGIN: admin:$apr1$j1mUQ18Z$Moa8a7FOwjvnSS/BRYIgm0
  DDNS_DOMAINS: gioneco.local.com
  DDNS_PARENT_NS: ns.local.com
  DDNS_DEFAULT_TTL: 3600

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
persistentStorage:
  storageClass: "k8s-nfs-storage"
  dbData:
    enabled: true
    path: /root/database
    accessModes:
    - ReadWriteOnce
    size: 1Gi
  cacheData:
    enabled: true
    path: /var/cache/bind
    accessModes:
    - ReadWriteOnce
    size: 1Gi

service:
  # Optional parameters: ClusterIP or NodePort
  type: NodePort
  web:
    port: 8080
    nodePort: 38080 
  dns:
    port: 53
    nodePort: 30053

livenessProbe:
  tcpSocket:
    port: 53
  initialDelaySeconds: 20
  periodSeconds: 30
  successThreshold: 1
  failureThreshold: 3
  timeoutSeconds: 2

readinessProbe:
  tcpSocket:
    port: 53
  initialDelaySeconds: 
  periodSeconds: 15
  successThreshold: 1
  failureThreshold: 1
  timeoutSeconds: 2

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 200m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

config:
  named_conf_options: |
    options {
        directory "/var/cache/bind";
        dnssec-validation auto;
        recursion no;
        allow-transfer { none; };
        auth-nxdomain no;
        listen-on-v6 { any; };
    };
    statistics-channels {
        inet 127.0.0.1 port 8053 allow { 127.0.0.1; };
    };

exporter:
  enabled: true
  image:
    repository: prometheuscommunity/bind-exporter
    tag: v0.7.0
    pullPolicy: IfNotPresent
  port: 9019
  resources:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 500Mi
